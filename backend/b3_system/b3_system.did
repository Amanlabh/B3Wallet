type LoadRelease = record { total : nat64; version : text; chunks : nat64 };
type Release = record {
  features : opt vec text;
  date : nat64;
  hash : text;
  size : nat64;
  version : text;
  deprecated : bool;
};
type ReleaseArgs = record {
  features : opt vec text;
  size : nat64;
  version : text;
};
type Result = variant { Ok : Signer; Err : text };
type Result_1 = variant { Ok; Err : text };
type Result_2 = variant { Ok : Release; Err : text };
type Result_3 = variant { Ok : LoadRelease; Err : text };
type Signer = record {
  updated_at : nat64;
  owner : principal;
  signer_id : opt principal;
  created_at : nat64;
};
service : () -> {
  add_controller : (principal) -> ();
  create_signer : () -> (Result);
  deprecate_release : (text) -> (Result_1);
  get_release : (text) -> (Result_2) query;
  get_release_by_index : (nat64) -> (Result_2) query;
  get_signer : () -> (opt Signer) query;
  get_signer_id : (principal) -> (opt principal) query;
  get_signers : () -> (vec principal) query;
  get_user_ids : () -> (vec principal) query;
  latest_release : () -> (Release) query;
  load_release : (vec nat8, ReleaseArgs) -> (Result_3);
  releases : () -> (vec Release) query;
  remove_controller : (principal) -> ();
  remove_latest_release : () -> ();
  remove_release : (text) -> (Result_1);
  remove_signer : (principal) -> ();
  update_release : (ReleaseArgs) -> (Result_1);
}